version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cps-postgres
    environment:
      POSTGRES_USER: cps_user
      POSTGRES_PASSWORD: cps_password
      POSTGRES_DB: cps_talent_acquisition
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cps_user -d cps_talent_acquisition"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cps-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: cps-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cps-network

  # MinIO Bucket Initialization
  minio-init:
    image: minio/mc:latest
    container_name: cps-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      mc mb myminio/resumes --ignore-existing;
      mc anonymous set download myminio/resumes;
      echo 'MinIO bucket initialized successfully';
      "
    networks:
      - cps-network

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: cps-api
    environment:
      APP_ENV: development
      DEBUG: "true"
      APP_HOST: 0.0.0.0
      APP_PORT: 8000
      DATABASE_URL: postgresql+asyncpg://cps_user:cps_password@postgres:5432/cps_talent_acquisition
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET: resumes
      MINIO_SECURE: "false"
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGINS: '["http://localhost:3000","http://localhost:8000"]'
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    networks:
      - cps-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  cps-network:
    driver: bridge

